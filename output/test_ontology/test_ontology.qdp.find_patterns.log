
Received 1 axiom instance(s).
Axiom instances:
	AxiomInstance(formula_name='qdp_f1', objs=[PatternObject(formula_name='qdp_f1', object_name='A', object_value='E'), PatternObject(formula_name='qdp_f1', object_name='B', object_value='Q'), PatternObject(formula_name='qdp_f1', object_name='C', object_value='has-quality'), PatternObject(formula_name='qdp_f1', object_name='D', object_value='K'), PatternObject(formula_name='qdp_f1', object_name='E', object_value='has-quale'), PatternObject(formula_name='qdp_f1', object_name='F', object_value='hasDataValue')], sentence='(forall (x) (if (E x) (exists (y) (and (Q y) (has-quality x y)\n                                       (exists (z) (and (K z) (has-quale y z)\n                                                        (exists (v) (hasDataValue z\n                                                                                  v))))))))')

Found 1 pattern instance(s) for pattern 'qdp'.
Instances:
	PatternInstance(pattern='qdp', objs=[PatternObject(formula_name='qdp_f1', object_name='A', object_value='E'), PatternObject(formula_name='qdp_f1', object_name='B', object_value='Q'), PatternObject(formula_name='qdp_f1', object_name='C', object_value='has-quality'), PatternObject(formula_name='qdp_f1', object_name='D', object_value='K'), PatternObject(formula_name='qdp_f1', object_name='E', object_value='has-quale'), PatternObject(formula_name='qdp_f1', object_name='F', object_value='hasDataValue')], axioms=(AxiomInstance(formula_name='qdp_f1', objs=[PatternObject(formula_name='qdp_f1', object_name='A', object_value='E'), PatternObject(formula_name='qdp_f1', object_name='B', object_value='Q'), PatternObject(formula_name='qdp_f1', object_name='C', object_value='has-quality'), PatternObject(formula_name='qdp_f1', object_name='D', object_value='K'), PatternObject(formula_name='qdp_f1', object_name='E', object_value='has-quale'), PatternObject(formula_name='qdp_f1', object_name='F', object_value='hasDataValue')], sentence='(forall (x) (if (E x) (exists (y) (and (Q y) (has-quality x y)\n                                       (exists (z) (and (K z) (has-quale y z)\n                                                        (exists (v) (hasDataValue z\n                                                                                  v))))))))'),))
